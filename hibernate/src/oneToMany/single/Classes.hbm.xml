<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
    <class name="oneToMany.single.Classes">	
    	<id name="cid" type="java.lang.Long" length="5">
    		<column name="cid"></column>
    		<generator class="increment"></generator>
    	</id>
    	<property name="cname" type="java.lang.String" length="20"></property>
    	<property name="description" type="java.lang.String" length="100"></property>
    	<!-- 
    		set元素和类中的set集合对应
    		  *  从外键的角度建立classes与student之间的关系
    		  *  从类与类的角度建立classes与student之间的关系
    		cascade级联:
    		  *  all: 所有情况下均进行关联操作，即save-update和delete。
　　                                  *  none: 所有情况下均不进行关联操作。这是默认值。
　                                      *  save-update: 在执行save/update/saveOrUpdate时进行关联操作。
　　                                  *  delete: 在执行delete 时进行关联操作。
　                                  　*  all-delete-orphan: 当一个节点在对象图中成为孤儿节点时，删除该节点。比如在一个一对多的关系中，Student包含多个book，当在对象关系中删除一个book时，此book即成为孤儿节点。
    		inverse是用来维护关系的
    		    *  要么是一对多的关系
    		    *  要么多对多的关系
    		    *  谁来维护关系
    		       inverse所在的映射文件对应的持久化对象维护关系
    		    默认值是false  表明维护关系
    		       true  表明不维护关系
    	 -->
    	<set name="students" cascade="save-update" >
    		<!-- 
    			key是用来描述外键
    			 column就代表外键的名字
    		 -->
    		 <key>
    		 	<column name="cid"></column>
    		 </key>
    		 <!-- 
    		 	classes和哪个对象进行关联
    		  -->
    		 <one-to-many class="oneToMany.single.Student"/>
    	</set>
    </class>
</hibernate-mapping>
